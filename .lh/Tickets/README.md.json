{
    "sourceFile": "Tickets/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1745305637426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745305643051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+# Issue and Feature Tracking\r\n+\r\n+This directory is used to track issues and feature ideas for the Asset Processor Tool using Markdown files.\r\n+\r\n+## Structure\r\n+\r\n+All ticket files are stored directly within the `Tickets/` directory.\r\n+\r\n+```mermaid\r\n+graph TD\r\n+    A[Asset_processor_tool] --> B(Tickets);\r\n+    A --> C(...other files/dirs...);\r\n+    B --> D(ISSUE-XXX-....md);\r\n+    B --> E(FEAT-XXX-....md);\r\n+    B --> F(_template.md);\r\n+```\r\n+\r\n+## File Naming Convention\r\n+\r\n+Ticket files should follow the convention: `TYPE-ID-short-description.md`\r\n+\r\n+*   `TYPE`: `ISSUE` for bug reports or problems, `FEAT` for new features or enhancements.\r\n+*   `ID`: A sequential three-digit number (e.g., `001`, `002`).\r\n+*   `short-description`: A brief, hyphenated summary of the ticket's content.\r\n+\r\n+Examples:\r\n+*   `ISSUE-001-gui-preview-bug.md`\r\n+*   `FEAT-002-add-dark-mode.md`\r\n+\r\n+## Ticket Template (`_template.md`)\r\n+\r\n+Use the `_template.md` file as a starting point for creating new tickets. It includes YAML front matter for structured metadata and standard Markdown headings for the ticket content.\r\n+\r\n+```markdown\r\n+---\r\n+ID: TYPE-XXX          # e.g., FEAT-001, ISSUE-002\r\n+Type: Issue | Feature  # Choose one: Issue or Feature\r\n+Status: Backlog | Planned | In Progress | Blocked | Needs Review | Done | Won't Fix # Choose one\r\n+Priority: Low | Medium | High # Choose one\r\n+Labels: [gui, cli, core, blender, bug, feature, enhancement, docs, config] # Add relevant labels from the list or define new ones\r\n+Created: YYYY-MM-DD\r\n+Updated: YYYY-MM-DD\r\n+Related: # Links to other tickets (e.g., #ISSUE-YYY), relevant files, or external URLs\r\n+---\r\n+\r\n+# [TYPE-XXX]: Brief Title of Issue/Feature\r\n+\r\n+## Description\r\n+(Provide a detailed explanation of the issue or feature request. What is the problem you are trying to solve, or what is the new functionality you are proposing?)\r\n+\r\n+## Current Behavior\r\n+(Describe what happens currently. If reporting a bug, explain the steps to reproduce it. If proposing a feature, describe the current state without the feature.)\r\n+\r\n+## Desired Behavior / Goals\r\n+(Describe what *should* happen if the issue is resolved, or what the feature aims to achieve. Be specific about the desired outcome.)\r\n+\r\n+## Implementation Notes (Optional)\r\n+(Add any thoughts on how this could be implemented, potential technical challenges, relevant code sections, or ideas for a solution.)\r\n+\r\n+## Acceptance Criteria (Optional)\r\n+(Define clear, testable criteria that must be met for the ticket to be considered complete.)\r\n+*   [ ] Criterion 1: The first condition that must be satisfied.\r\n+*   [ ] Criterion 2: The second condition that must be satisfied.\r\n+*   [ ] Add more criteria as needed.\r\n+\r\n+```\r\n+\r\n+## How to Use\r\n+\r\n+1.  Create a new Markdown file in the `Tickets/` directory following the naming convention (`TYPE-ID-short-description.md`).\r\n+2.  Copy the content from `_template.md` into your new file.\r\n+3.  Fill in the YAML front matter and the Markdown sections with details about the issue or feature.\r\n+4.  Update the `Status` and `Updated` fields as you work on the ticket.\r\n+5.  Use the `Related` field to link to other relevant tickets or project files.\r\n+```\r\n+<line_count>78</line_count>\r\n"
                },
                {
                    "date": 1745305674150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+# Issue and Feature Tracking\r\n+\r\n+This directory is used to track issues and feature ideas for the Asset Processor Tool using Markdown files.\r\n+\r\n+## Structure\r\n+\r\n+All ticket files are stored directly within the `Tickets/` directory.\r\n+\r\n+```mermaid\r\n+graph TD\r\n+    A[Asset_processor_tool] --> B(Tickets);\r\n+    A --> C(...other files/dirs...);\r\n+    B --> D(ISSUE-XXX-....md);\r\n+    B --> E(FEAT-XXX-....md);\r\n+    B --> F(_template.md);\r\n+```\r\n+\r\n+## File Naming Convention\r\n+\r\n+Ticket files should follow the convention: `TYPE-ID-short-description.md`\r\n+\r\n+*   `TYPE`: `ISSUE` for bug reports or problems, `FEAT` for new features or enhancements.\r\n+*   `ID`: A sequential three-digit number (e.g., `001`, `002`).\r\n+*   `short-description`: A brief, hyphenated summary of the ticket's content.\r\n+\r\n+Examples:\r\n+*   `ISSUE-001-gui-preview-bug.md`\r\n+*   `FEAT-002-add-dark-mode.md`\r\n+\r\n+## Ticket Template (`_template.md`)\r\n+\r\n+Use the `_template.md` file as a starting point for creating new tickets. It includes YAML front matter for structured metadata and standard Markdown headings for the ticket content.\r\n+\r\n+```markdown\r\n+---\r\n+ID: TYPE-XXX          # e.g., FEAT-001, ISSUE-002\r\n+Type: Issue | Feature  # Choose one: Issue or Feature\r\n+Status: Backlog | Planned | In Progress | Blocked | Needs Review | Done | Won't Fix # Choose one\r\n+Priority: Low | Medium | High # Choose one\r\n+Labels: [gui, cli, core, blender, bug, feature, enhancement, docs, config] # Add relevant labels from the list or define new ones\r\n+Created: YYYY-MM-DD\r\n+Updated: YYYY-MM-DD\r\n+Related: # Links to other tickets (e.g., #ISSUE-YYY), relevant files, or external URLs\r\n+---\r\n+\r\n+# [TYPE-XXX]: Brief Title of Issue/Feature\r\n+\r\n+## Description\r\n+(Provide a detailed explanation of the issue or feature request. What is the problem you are trying to solve, or what is the new functionality you are proposing?)\r\n+\r\n+## Current Behavior\r\n+(Describe what happens currently. If reporting a bug, explain the steps to reproduce it. If proposing a feature, describe the current state without the feature.)\r\n+\r\n+## Desired Behavior / Goals\r\n+(Describe what *should* happen if the issue is resolved, or what the feature aims to achieve. Be specific about the desired outcome.)\r\n+\r\n+## Implementation Notes (Optional)\r\n+(Add any thoughts on how this could be implemented, potential technical challenges, relevant code sections, or ideas for a solution.)\r\n+\r\n+## Acceptance Criteria (Optional)\r\n+(Define clear, testable criteria that must be met for the ticket to be considered complete.)\r\n+*   [ ] Criterion 1: The first condition that must be satisfied.\r\n+*   [ ] Criterion 2: The second condition that must be satisfied.\r\n+*   [ ] Add more criteria as needed.\r\n+\r\n+```\r\n+\r\n+## How to Use\r\n+\r\n+1.  Create a new Markdown file in the `Tickets/` directory following the naming convention (`TYPE-ID-short-description.md`).\r\n+2.  Copy the content from `_template.md` into your new file.\r\n+3.  Fill in the YAML front matter and the Markdown sections with details about the issue or feature.\r\n+4.  Update the `Status` and `Updated` fields as you work on the ticket.\r\n+5.  Use the `Related` field to link to other relevant tickets or project files.\r\n+```\r\n+<line_count>78</line_count>\r\n"
                },
                {
                    "date": 1745307072622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+# Issue and Feature Tracking\r\n+\r\n+This directory is used to track issues and feature ideas for the Asset Processor Tool using Markdown files.\r\n+\r\n+## Structure\r\n+\r\n+All ticket files are stored directly within the `Tickets/` directory.\r\n+\r\n+```mermaid\r\n+graph TD\r\n+    A[Asset_processor_tool] --> B(Tickets);\r\n+    A --> C(...other files/dirs...);\r\n+    B --> D(ISSUE-XXX-....md);\r\n+    B --> E(FEAT-XXX-....md);\r\n+    B --> F(_template.md);\r\n+```\r\n+\r\n+## File Naming Convention\r\n+\r\n+Ticket files should follow the convention: `TYPE-ID-short-description.md`\r\n+\r\n+*   `TYPE`: `ISSUE` for bug reports or problems, `FEAT` for new features or enhancements.\r\n+*   `ID`: A sequential three-digit number (e.g., `001`, `002`).\r\n+*   `short-description`: A brief, hyphenated summary of the ticket's content.\r\n+\r\n+Examples:\r\n+*   `ISSUE-001-gui-preview-bug.md`\r\n+*   `FEAT-002-add-dark-mode.md`\r\n+\r\n+## Ticket Template (`_template.md`)\r\n+\r\n+Use the `_template.md` file as a starting point for creating new tickets. It includes YAML front matter for structured metadata and standard Markdown headings for the ticket content.\r\n+\r\n+```markdown\r\n+---\r\n+ID: TYPE-XXX          # e.g., FEAT-001, ISSUE-002\r\n+Type: Issue | Feature  # Choose one: Issue or Feature\r\n+Status: Backlog | Planned | In Progress | Blocked | Needs Review | Done | Won't Fix # Choose one\r\n+Priority: Low | Medium | High # Choose one\r\n+Labels: [gui, cli, core, blender, bug, feature, enhancement, docs, config] # Add relevant labels from the list or define new ones\r\n+Created: YYYY-MM-DD\r\n+Updated: YYYY-MM-DD\r\n+Related: # Links to other tickets (e.g., #ISSUE-YYY), relevant files, or external URLs\r\n+---\r\n+\r\n+# [TYPE-XXX]: Brief Title of Issue/Feature\r\n+\r\n+## Description\r\n+(Provide a detailed explanation of the issue or feature request. What is the problem you are trying to solve, or what is the new functionality you are proposing?)\r\n+\r\n+## Current Behavior\r\n+(Describe what happens currently. If reporting a bug, explain the steps to reproduce it. If proposing a feature, describe the current state without the feature.)\r\n+\r\n+## Desired Behavior / Goals\r\n+(Describe what *should* happen if the issue is resolved, or what the feature aims to achieve. Be specific about the desired outcome.)\r\n+\r\n+## Implementation Notes (Optional)\r\n+(Add any thoughts on how this could be implemented, potential technical challenges, relevant code sections, or ideas for a solution.)\r\n+\r\n+## Acceptance Criteria (Optional)\r\n+(Define clear, testable criteria that must be met for the ticket to be considered complete.)\r\n+*   [ ] Criterion 1: The first condition that must be satisfied.\r\n+*   [ ] Criterion 2: The second condition that must be satisfied.\r\n+*   [ ] Add more criteria as needed.\r\n+\r\n+```\r\n+\r\n+## How to Use\r\n+\r\n+1.  Create a new Markdown file in the `Tickets/` directory following the naming convention (`TYPE-ID-short-description.md`).\r\n+2.  Copy the content from `_template.md` into your new file.\r\n+3.  Fill in the YAML front matter and the Markdown sections with details about the issue or feature.\r\n+4.  Update the `Status` and `Updated` fields as you work on the ticket.\r\n+5.  Use the `Related` field to link to other relevant tickets or project files.\r\n+```\r\n"
                },
                {
                    "date": 1745307082294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,4 +72,5 @@\n 3.  Fill in the YAML front matter and the Markdown sections with details about the issue or feature.\r\n 4.  Update the `Status` and `Updated` fields as you work on the ticket.\r\n 5.  Use the `Related` field to link to other relevant tickets or project files.\r\n ```\r\n+<line_count>78</line_count>\r\n"
                }
            ],
            "date": 1745305637426,
            "name": "Commit-0",
            "content": "# Issue and Feature Tracking\r\n\r\nThis directory is used to track issues and feature ideas for the Asset Processor Tool using Markdown files.\r\n\r\n## Structure\r\n\r\nAll ticket files are stored directly within the `Tickets/` directory.\r\n\r\n```mermaid\r\ngraph TD\r\n    A[Asset_processor_tool] --> B(Tickets);\r\n    A --> C(...other files/dirs...);\r\n    B --> D(ISSUE-XXX-....md);\r\n    B --> E(FEAT-XXX-....md);\r\n    B --> F(_template.md);\r\n```\r\n\r\n## File Naming Convention\r\n\r\nTicket files should follow the convention: `TYPE-ID-short-description.md`\r\n\r\n*   `TYPE`: `ISSUE` for bug reports or problems, `FEAT` for new features or enhancements.\r\n*   `ID`: A sequential three-digit number (e.g., `001`, `002`).\r\n*   `short-description`: A brief, hyphenated summary of the ticket's content.\r\n\r\nExamples:\r\n*   `ISSUE-001-gui-preview-bug.md`\r\n*   `FEAT-002-add-dark-mode.md`\r\n\r\n## Ticket Template (`_template.md`)\r\n\r\nUse the `_template.md` file as a starting point for creating new tickets. It includes YAML front matter for structured metadata and standard Markdown headings for the ticket content.\r\n\r\n```markdown\r\n---\r\nID: TYPE-XXX          # e.g., FEAT-001, ISSUE-002\r\nType: Issue | Feature  # Choose one: Issue or Feature\r\nStatus: Backlog | Planned | In Progress | Blocked | Needs Review | Done | Won't Fix # Choose one\r\nPriority: Low | Medium | High # Choose one\r\nLabels: [gui, cli, core, blender, bug, feature, enhancement, docs, config] # Add relevant labels from the list or define new ones\r\nCreated: YYYY-MM-DD\r\nUpdated: YYYY-MM-DD\r\nRelated: # Links to other tickets (e.g., #ISSUE-YYY), relevant files, or external URLs\r\n---\r\n\r\n# [TYPE-XXX]: Brief Title of Issue/Feature\r\n\r\n## Description\r\n(Provide a detailed explanation of the issue or feature request. What is the problem you are trying to solve, or what is the new functionality you are proposing?)\r\n\r\n## Current Behavior\r\n(Describe what happens currently. If reporting a bug, explain the steps to reproduce it. If proposing a feature, describe the current state without the feature.)\r\n\r\n## Desired Behavior / Goals\r\n(Describe what *should* happen if the issue is resolved, or what the feature aims to achieve. Be specific about the desired outcome.)\r\n\r\n## Implementation Notes (Optional)\r\n(Add any thoughts on how this could be implemented, potential technical challenges, relevant code sections, or ideas for a solution.)\r\n\r\n## Acceptance Criteria (Optional)\r\n(Define clear, testable criteria that must be met for the ticket to be considered complete.)\r\n*   [ ] Criterion 1: The first condition that must be satisfied.\r\n*   [ ] Criterion 2: The second condition that must be satisfied.\r\n*   [ ] Add more criteria as needed.\r\n\r\n```\r\n\r\n## How to Use\r\n\r\n1.  Create a new Markdown file in the `Tickets/` directory following the naming convention (`TYPE-ID-short-description.md`).\r\n2.  Copy the content from `_template.md` into your new file.\r\n3.  Fill in the YAML front matter and the Markdown sections with details about the issue or feature.\r\n4.  Update the `Status` and `Updated` fields as you work on the ticket.\r\n5.  Use the `Related` field to link to other relevant tickets or project files.\r\n```\r\n<line_count>78</line_count>\r\n"
        }
    ]
}